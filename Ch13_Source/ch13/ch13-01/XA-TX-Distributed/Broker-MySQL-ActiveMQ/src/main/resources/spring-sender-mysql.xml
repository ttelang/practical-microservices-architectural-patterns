<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (c) 2019/2020 Binildas A Christudas, Apress Media, LLC. All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

- Redistributions of source code must retain the above copyright
  notice, this list of conditions and the following disclaimer.

- Redistribution in binary form must reproduce the above copyright
  notice, this list of conditions and the following disclaimer in
  the documentation and/or other materials provided with the
  distribution.

Neither the name of the author, publisher or the names of
contributors may be used to endorse or promote products derived
from this software without specific prior written permission.

This software is provided "AS IS," without a warranty of any
kind. ALL EXPRESS OR IMPLIED CONDITIONS, REPRESENTATIONS AND
WARRANTIES, INCLUDING ANY IMPLIED WARRANTY OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE OR NON-INFRINGEMENT, ARE HEREBY
EXCLUDED. AUTHOR, PUBLISHER AND ITS LICENSORS SHALL NOT BE LIABLE FOR ANY
DAMAGES SUFFERED BY LICENSEE AS A RESULT OF USING, MODIFYING OR
DISTRIBUTING THE SOFTWARE OR ITS DERIVATIVES. IN NO EVENT WILL THE AUTHOR,
PUBLISHER OR ITS LICENSORS BE LIABLE FOR ANY LOST REVENUE, PROFIT OR DATA,
OR FOR DIRECT, INDIRECT, SPECIAL, CONSEQUENTIAL, INCIDENTAL OR
PUNITIVE DAMAGES, HOWEVER CAUSED AND REGARDLESS OF THE THEORY OF
LIABILITY, ARISING OUT OF THE USE OF OR INABILITY TO USE SOFTWARE,
EVEN IF THE AUTHOR, PUBLISHER HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.

You acknowledge that Software is not designed, licensed or intended
for use in the design, construction, operation or maintenance of
any nuclear facility.

author <a href="mailto:biniljava<[@>.]yahoo.co.in">Binildas C. A.</a>
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation=" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
       http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd 
	   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd 
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd ">


	<bean id="datasourceAtomikos-01"
		class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close">
		<property name="uniqueResourceName"><value>JDBC-1</value></property>
		<property name="xaDataSource"><ref bean="xaDataSourceMySQL-01"  /></property>
		<property name="xaProperties">
			<props>
				<prop key="maxPoolSize">4</prop>
				<prop key="uniqueResourceName">xads1</prop>
			</props>
		</property>
		<property name="poolSize"><value>4</value></property>
	</bean>

	<!--bean id="xaDataSourceMySQL-01" class="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource"-->
	<bean id="xaDataSourceMySQL-01" class="com.mysql.cj.jdbc.MysqlXADataSource">
		<property name="url"><value>jdbc:mysql://localhost:3306/ecom01</value></property>
		<property name="pinGlobalTxToPhysicalConnection"><value>true</value></property>
		<property name="user"><value>root</value></property>
		<property name="password"><value>rootpassword</value></property>
	</bean>


	<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init" destroy-method="close">
		<property name="forceShutdown"><value>true</value></property>
	</bean>

	<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
		<property name="transactionTimeout"><value>300</value></property>
	</bean>


	<bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">

		<property name="transactionManager"><ref bean="atomikosTransactionManager"  /></property>
		<property name="userTransaction"><ref bean="atomikosUserTransaction"  /></property>
	</bean>

	<bean id="springJtaPlatformAdapter" class="com.acme.ecom.AtomikosJtaPlatform">
		<property name="jtaTransactionManager" ref="transactionManager" />
	</bean>

	<bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>

	<bean id="quoteEntityManager" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="datasourceAtomikos-01"/>
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.transaction.jta.platform">com.acme.ecom.AtomikosJtaPlatform</prop>
				<prop key="javax.persistence.transactionType">JTA</prop>
			</props>
		</property>
		<property name="packagesToScan" value="com.acme.ecom.model.quote"/>
		<property name="persistenceUnitName" value="quotePersistenceUnit" />
	</bean>

	<jpa:repositories base-package="com.acme.ecom.repository.quote" entity-manager-factory-ref="quoteEntityManager"/> 

    <bean id="XaFactory" class="org.apache.activemq.ActiveMQXAConnectionFactory">
        <property name="brokerURL" value="tcp://127.0.0.1:61616"/>
    </bean>

    <bean id="connectionFactory" class="com.atomikos.jms.AtomikosConnectionFactoryBean" init-method="init">
        <property name="uniqueResourceName" value="JMS-Producer"/>
        <property name="xaConnectionFactory" ref="XaFactory"/>
        <property name="localTransactionMode" value="false"/><!-- Added -->
    </bean>

	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="connectionFactory"/>
		<property name="defaultDestinationName" value="notification.queue"/>
		<property name="deliveryPersistent" value="true"/>
		<property name="sessionTransacted" value="true"/>
		<property name="sessionAcknowledgeMode" value="0"/>
	</bean>

	<bean id="stockOrderTarget" class= "com.acme.ecom.messaging.StockOrderServiceImpl">
        <property name="jmsTemplate" ref="jmsTemplate"/>
    </bean>
    
	<bean id="stockOrderServiceRequired_TX" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref bean="transactionManager" /></property>
		<property name="target"><ref bean="stockOrderTarget"  /></property>
		<property name="transactionAttributes">
			<props>
				<prop key="sendOrderMessage*">PROPAGATION_REQUIRED, -QuotesMessageRollbackException, +QuotesNoRollbackException</prop>
			</props>
		</property>
	</bean>

	<bean id="stockOrderServiceRequiresNew_TX" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref bean="transactionManager" /></property>
		<property name="target"><ref bean="stockOrderTarget"  /></property>
		<property name="transactionAttributes">
			<props>
				<prop key="sendOrderMessage*">PROPAGATION_REQUIRES_NEW, -QuotesMessageRollbackException, +QuotesNoRollbackException</prop>
			</props>
		</property>
	</bean>

	<bean id="auctionTarget" class= "com.acme.ecom.service.AuctionServiceImpl">
	</bean>

	<bean id="auctionServiceRequired_TX" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref bean="transactionManager" /></property>
		<property name="target"><ref bean="auctionTarget"  /></property>
		<property name="transactionAttributes">
			<props>
				<prop key="confirm*">PROPAGATION_REQUIRED, -QuotesConfirmRollbackException, +QuotesNoRollbackException</prop>
				<prop key="find*">PROPAGATION_SUPPORTS, readOnly</prop>
			</props>
		</property>
	</bean>

	<bean id="auctionServiceRequiresNew_TX" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref bean="transactionManager" /></property>
		<property name="target"><ref bean="auctionTarget"  /></property>
		<property name="transactionAttributes">
			<props>
				<prop key="confirm*">PROPAGATION_REQUIRES_NEW, -QuotesConfirmRollbackException, +QuotesNoRollbackException</prop>
				<prop key="find*">PROPAGATION_SUPPORTS, readOnly</prop>
			</props>
		</property>
	</bean>

	<bean id="brokerTarget" class= "com.acme.ecom.service.BrokerServiceImpl">
	</bean>

	<bean id="brokerServiceRequired_TX" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref bean="transactionManager" /></property>
		<property name="target"><ref bean="brokerTarget"  /></property>
		<property name="transactionAttributes">
			<props>
				<prop key="process*">PROPAGATION_REQUIRED, -QuotesBaseException, +QuotesNoRollbackException</prop>
				<prop key="find*">PROPAGATION_SUPPORTS, readOnly</prop>
			</props>
		</property>
	</bean>

	<bean id="quotesProcessorTask" class="com.acme.ecom.schedule.QuotesProcessorTask" />

	<bean name="quotesJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass" value="com.acme.ecom.schedule.QuotesScheduler" />

		<property name="jobDataAsMap">
			<map>
			<entry key="quotesProcessorTask" value-ref="quotesProcessorTask" />
			</map>
		</property>
		<property name="durability" value="true" />
	</bean>

	<bean id="simpleTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
		<property name="jobDetail" ref="quotesJob" />
		<property name="repeatInterval" value="60000" />
		<property name="startDelay" value="1000" />
	</bean>

	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="jobDetails">
			<list>
				<ref bean="quotesJob" />
			</list>
		</property>

		<property name="triggers">
			<list>
				<ref bean="simpleTrigger" />
			</list>
		</property>
	</bean>

</beans>
